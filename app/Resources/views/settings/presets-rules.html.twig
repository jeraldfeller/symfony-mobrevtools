{% extends 'base.html.twig' %}
{% block stylesheets %}
    <link href="{{ asset('assets/global/plugins/select2/css/select2.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/select2/css/select2-bootstrap.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/bootstrap-daterangepicker/daterangepicker.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('assets/global/plugins/clockface/css/clockface.css') }}" rel="stylesheet" type="text/css" />
    <style>
        .align-left{
            text-align: left !important;
            padding-left: 10px !important;
        }
    </style>
{% endblock %}
{% block nav %}
    {{ render(controller(
    'AppBundle:Navmenu:getNavmenu'
    )) }}
{% endblock %}
{% block body %}
    <h1 class="page-title"> {{ page }}

    </h1>
    <div class="page-bar">
        <ul class="page-breadcrumb">
            <li>
                <i class="icon-home"></i>
                <a href="/">Home</a>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <span>Settings</span>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <span>{{ page }}</span>
            </li>

        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">
                <button type="button" class="btn btn-fit-height grey-salt dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="1000" data-close-others="true"> Actions
                    <i class="fa fa-angle-down"></i>
                </button>
                <ul class="dropdown-menu pull-right" role="menu">
                    <li>
                        <a href="#">
                            <i class="icon-bell"></i> Action</a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="icon-shield"></i> Another action</a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="icon-user"></i> Something else here</a>
                    </li>
                    <li class="divider"> </li>
                    <li>
                        <a href="#">
                            <i class="icon-bag"></i> Separated link</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <!-- END PAGE HEADER-->
    <div class="row">
        <div class="col-lg-12">
            <div class="portlet light">
                <div class="portlet-title">
                    <button class="btn blue" data-toggle="modal" data-target="#addModal"><i class="fa fa-plus"></i> Add Preset</button>
                </div>


                <div id="addModal" class="modal fade bs-example-modal-md" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">

                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span>
                                </button>
                                <h4 class="modal-title" id="myModalLabel2">Add Preset</h4>
                            </div>

                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-lg-12">

                                        <div class="form-group">
                                            <div class="col-md-4 col-xs-12">
                                                <h4>Preset Name</h4>
                                                <input type="text" class="form-control" id="presetName">
                                            </div>
                                            <div class="col-md-12">
                                                <h4>Conditions</h4>
                                                <div id="appendRuleSet">
                                                </div>
                                                <div class="clearfix"></div>
                                                <br>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <a id="addCondition">[ add condition ]</a>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" id="addPresetBtn" class="btn btn-primary spinnerBtn ladda-button" data-style="expand-right" data-size="l"><span class="ladda-label">Save </span></button>
                            </div>


                        </div>
                    </div>
                </div>


                <div id="editModal" class="modal fade bs-example-modal-md" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">

                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span>
                                </button>
                                <h4 class="modal-title" id="myModalLabel2">Edit Preset</h4>
                                <input type="hidden" id="lastCount">
                                <input type="hidden" id="editPresetId">
                            </div>

                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-lg-12">

                                        <div class="form-group">
                                            <div class="col-md-4 col-xs-12">
                                                <h4>Preset Name</h4>
                                                <input type="text" class="form-control" id="editPresetName">
                                            </div>
                                            <div class="col-md-12">
                                                <h4>Conditions</h4>
                                                <div id="editAppendRuleSet">
                                                </div>
                                                <div class="clearfix"></div>
                                                <br>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <a id="editAddCondition">[ add condition ]</a>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" id="editPresetBtn" class="btn btn-primary spinnerBtn ladda-button" data-style="expand-right" data-size="l"><span class="ladda-label">Save </span></button>
                            </div>


                        </div>
                    </div>
                </div>


                <div class="modal fade" id="editModal" role="basic" aria-hidden="true">
                    <div class="modal-dialog modal-md">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4>Edit <span id="editLanderNameDisplay"></span></h4>
                            </div>
                            <div class="modal-body">
                                <div class="row" id="displayEditLander">

                                </div>


                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn dark btn-outline" data-dismiss="modal">Close</button>
                                <button type="button" id="updateLander"  class="btn blue ladda-button spinnerBtn" data-style="expand-right" data-size="l"><span class="ladda-label"><i class="fa fa-save"></i> Save</span></button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog modal-sm">
                        <div class="modal-content">

                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">x</span>
                                </button>
                                <h2 class="modal-title" id="modalDeleteTitle"><i class="fa fa-warning"></i> Warning</h2>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <p>Are you sure do you want to delete <b><span id="deletePresetName"></span>?</b></p>
                                        <input type="hidden" id="deletePresetId" class="form-control col-lg-12 col-md-12 col-sm-12">
                                    </div>
                                </div>

                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" id="deletePresetBtn" class="btn btn-primary spinnerBtn ladda-button" data-style="expand-right" data-size="l"><span class="ladda-label">Delete </span></button>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="portlet-body">
                    <div class="row">
                        <!-- Placement Table -->
                        <div class="col-lg-12">
                            <table class="table table-striped table-bordered table-hover dt-responsive table-checkable order-column table-header-fixed" width="100%" id="datatable-responsive">
                                <thead>
                                <tr>
                                    <th>Preset Name</th>
                                    <th>Action</th>

                                </tr>
                                </thead>
                                <tbody>

                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>

            </div>


        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script src="{{ asset('assets/global/plugins/autosize/autosize.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/select2/js/select2.full.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/moment.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/bootstrap-daterangepicker/daterangepicker.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/global/plugins/clockface/js/clockface.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/pages/scripts/components-date-time-pickers.js') }}" type="text/javascript"></script>
    <script src="{{ asset('assets/pages/scripts/components-bootstrap-switch.min.js') }}" type="text/javascript"></script>
    <script>
        Ladda.bind( '.spinnerBtn' );
    </script>
    <script type="text/javascript">

        var ComponentsSelect2 = function() {

            var handleDemo = function() {

                // Set the "bootstrap" theme as the default theme for all Select2
                // widgets.
                //
                // @see https://github.com/select2/select2/issues/2927
                $.fn.select2.defaults.set("theme", "bootstrap");

                $("#selectCampaign").select2({
                    allowClear: true,
                    placeholder: 'Select Campaign',
                    width: null
                });

                $("#selectAddVertical").select2({
                    allowClear: true,
                    placeholder: 'Select Vertical',
                    width: null
                });

                $("#selectPresetType").select2({
                    allowClear: true,
                    placeholder: 'Select Preset Type',
                    width: null
                });

                $("#selectPresetRule").select2({
                    allowClear: true,
                    placeholder: 'Choose Preset',
                    width: null
                });

                $("#selectFrequencyFormat").select2({
                    allowClear: true,
                    placeholder: 'Select Frequency Format',
                    width: null
                });

                $("#selectLogicalOperator").select2({
                    allowClear: true,
                    placeholder: 'Select Logical Operator',
                    width: null
                });

                $("#selectRuleType").select2({
                    allowClear: true,
                    placeholder: 'Select Rule Type',
                    width: null
                });

                $("#filterByType").select2({
                    allowClear: true,
                    placeholder: 'Select Rule Type',
                    width: null
                });
                // @see https://select2.github.io/examples.html#data-ajax
                function formatRepo(repo) {
                    if (repo.loading) return repo.text;

                    var markup = "<div class='select2-result-repository clearfix'>" +
                            "<div class='select2-result-repository__avatar'><img src='" + repo.owner.avatar_url + "' /></div>" +
                            "<div class='select2-result-repository__meta'>" +
                            "<div class='select2-result-repository__title'>" + repo.full_name + "</div>";

                    if (repo.description) {
                        markup += "<div class='select2-result-repository__description'>" + repo.description + "</div>";
                    }

                    markup += "<div class='select2-result-repository__statistics'>" +
                    "<div class='select2-result-repository__forks'><span class='glyphicon glyphicon-flash'></span> " + repo.forks_count + " Forks</div>" +
                    "<div class='select2-result-repository__stargazers'><span class='glyphicon glyphicon-star'></span> " + repo.stargazers_count + " Stars</div>" +
                    "<div class='select2-result-repository__watchers'><span class='glyphicon glyphicon-eye-open'></span> " + repo.watchers_count + " Watchers</div>" +
                    "</div>" +
                    "</div></div>";

                    return markup;
                }

                function formatRepoSelection(repo) {
                    return repo.full_name || repo.text;
                }

                $(".js-data-example-ajax").select2({
                    width: "off",
                    ajax: {
                        url: "https://api.github.com/search/repositories",
                        dataType: 'json',
                        delay: 250,
                        data: function(params) {
                            return {
                                q: params.term, // search term
                                page: params.page
                            };
                        },
                        processResults: function(data, page) {
                            // parse the results into the format expected by Select2.
                            // since we are using custom formatting functions we do not need to
                            // alter the remote JSON data
                            return {
                                results: data.items
                            };
                        },
                        cache: true
                    },
                    escapeMarkup: function(markup) {
                        return markup;
                    }, // let our custom formatter work
                    minimumInputLength: 1,
                    templateResult: formatRepo,
                    templateSelection: formatRepoSelection
                });

                $("button[data-select2-open]").click(function() {
                    $("#" + $(this).data("select2-open")).select2("open");
                });

                $(":checkbox").on("click", function() {
                    $(this).parent().nextAll("select").prop("disabled", !this.checked);
                });

                // copy Bootstrap validation states to Select2 dropdown
                //
                // add .has-waring, .has-error, .has-succes to the Select2 dropdown
                // (was #select2-drop in Select2 v3.x, in Select2 v4 can be selected via
                // body > .select2-container) if _any_ of the opened Select2's parents
                // has one of these forementioned classes (YUCK! ;-))
                $(".select2, .select2-multiple, .select2-allow-clear, .js-data-example-ajax").on("select2:open", function() {
                    if ($(this).parents("[class*='has-']").length) {
                        var classNames = $(this).parents("[class*='has-']")[0].className.split(/\s+/);

                        for (var i = 0; i < classNames.length; ++i) {
                            if (classNames[i].match("has-")) {
                                $("body > .select2-container").addClass(classNames[i]);
                            }
                        }
                    }
                });

                $(".js-btn-set-scaling-classes").on("click", function() {
                    $("#select2-multiple-input-sm, #select2-single-input-sm").next(".select2-container--bootstrap").addClass("input-sm");
                    $("#select2-multiple-input-lg, #select2-single-input-lg").next(".select2-container--bootstrap").addClass("input-lg");
                    $(this).removeClass("btn-primary btn-outline").prop("disabled", true);
                });
            }

            return {
                //main function to initiate the module
                init: function() {
                    handleDemo();
                }
            };

        }();

        if (App.isAngularJsApp() === false) {
            $(document).ready(function() {
                ComponentsSelect2.init();

                /**
                 * Data Table
                 */

                var fixedHeaderOffset = 0;
                if (App.getViewPort().width < App.getResponsiveBreakpoint('md')) {
                    if ($('.page-header').hasClass('page-header-fixed-mobile')) {
                        fixedHeaderOffset = $('.page-header').outerHeight(true);
                    }
                } else if ($('.page-header').hasClass('navbar-fixed-top')) {
                    fixedHeaderOffset = $('.page-header').outerHeight(true);
                } else if ($('body').hasClass('page-header-fixed')) {
                    fixedHeaderOffset = 64; // admin 5 fixed height
                }
                var table = $('#datatable-responsive');
                var oTable = $('#datatable-responsive').DataTable({
                    fixedHeader: {
                        header: true,
                        headerOffset: fixedHeaderOffset
                    },
                    "bProcessing": true,
                    "bServerSide": true,
                    "sAjaxSource": "/ajax/get-rule-presets",
                    responsive: {
                        details: {

                        }
                    },
                    "iDisplayLength": 20,
                    "lengthMenu": [
                        [20, 500, 1000, -1],
                        [20, 500, 1000, "All"] // change per page values here
                    ],
                    "order": [[ 0, "asc" ]],
                    "columnDefs": [
                        {"width": "85%", "targets": 0},
                        {className: "align-left", "targets": 0}
                    ]
                });



                /**
                 * Adding Rule
                 */

                $i = 0;
                $dataConditions = {
                    items:[]
                };

                $('#addCondition').click(function(){

                    $('#appendRuleSet').append(
                            '<div class="row" id="row-'+$i+'">' +
                            '<br>' +
                            '<div class="col-md-3">' +
                            '<select id="metric-'+$i+'" class="select2_single form-control metric" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="visits">Visits</option>' +
                            '<option value="conversions">Conversion</option>' +
                            '<option value="cost">Cost</option>' +
                            '<option value="cpv">CPV</option>' +
                            '<option value="ctr">CTR</option>' +
                            '<option value="epv">EPV</option>' +
                            '<option value="roi">ROI</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-3">' +
                            '<select data-index="' +$i+ '" onChange="enableInputValue(this)" id="option-'+$i+'" class="select2_single form-control option" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="greaterThan">Greater Than</option>' +
                            '<option value="lessThan">Less Than</option>' +
                            '<option value="between">Between</option>' +
                            '<option value="equalTo">Equal To</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="value1-'+$i+'" placeholder="Enter Value" onkeypress="isNumberKey(event)">'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="value2-'+$i+'" placeholder="Enter Value" onkeypress="isNumberKey(event)" disabled>'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<button class="btn red btn-md" data-index="'+$i+'" onclick="removeAppend(this)"><i class="fa fa-times"></i> Remove</button">' +
                            '</div>' +
                            '</div>'

                    );

                    $dataConditions.items.push({
                        metric: 'metric-'+$i,
                        option: 'option-'+$i,
                        value1: 'value1-'+$i,
                        value2: 'value2-'+$i
                    });

                    $i++;


                    $(".metric").select2({
                        allowClear: true,
                        placeholder: 'Select Metric',
                        width: null
                    });

                    $(".option").select2({
                        allowClear: true,
                        placeholder: 'Select Option',
                        width: null
                    });



                });


                $e = $('#lastCount').val();
                $editDataConditions = {
                    items:[]
                };

                $('#editAddCondition').click(function(){

                    $('#editAppendRuleSet').append(
                            '<div class="row" id="e-row-'+$e+'">' +
                            '<br>' +
                            '<div class="col-md-3">' +
                            '<select id="e-metric-'+$e+'" class="select2_single form-control metric" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="visits">Visits</option>' +
                            '<option value="conversions">Conversion</option>' +
                            '<option value="cost">Cost</option>' +
                            '<option value="cpv">CPV</option>' +
                            '<option value="ctr">CTR</option>' +
                            '<option value="epv">EPV</option>' +
                            '<option value="roi">ROI</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-3">' +
                            '<select data-index="' +$i+ '" onChange="enableEditInputValue(this)" id="e-option-'+$e+'" class="select2_single form-control option" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="greaterThan">Greater Than</option>' +
                            '<option value="lessThan">Less Than</option>' +
                            '<option value="between">Between</option>' +
                            '<option value="equalTo">Equal To</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="e-value1-'+$e+'" placeholder="Enter Value" onkeypress="isNumberKey(event)">'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="e-value2-'+$e+'" placeholder="Enter Value" onkeypress="isNumberKey(event)" disabled>'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<button class="btn red btn-md" data-index="'+$e+'" onclick="removeEditAppend(this)"><i class="fa fa-times"></i> Remove</button">' +
                            '</div>' +
                            '</div>'

                    );

                    $editDataConditions.items.push({
                        metric: 'e-metric-'+$e,
                        option: 'e-option-'+$e,
                        value1: 'e-value1-'+$e,
                        value2: 'e-value2-'+$e
                    });

                    $e++;


                    $(".metric").select2({
                        allowClear: true,
                        placeholder: 'Select Metric',
                        width: null
                    });

                    $(".option").select2({
                        allowClear: true,
                        placeholder: 'Select Option',
                        width: null
                    });



                });

                $('#editPresetBtn').click(function(){
                    $btn = $(this)[0];
                    $editData = {
                        id: $('#editPresetId').val(),
                        presetName: $('#editPresetName').val(),
                        conditions: []
                    };
                    $indexes = [];
                    $.each($editDataConditions.items, function(i, val) {
                        if (typeof val != 'undefined') {
                            $editData.conditions.push({
                                metric: $('#' + val['metric']).val(),
                                option: $('#' + val['option']).val(),
                                value1: $('#' + val['value1']).val(),
                                value2: $('#' + val['value2']).val()
                            });
                            $indexes.push(i);
                        }
                    });

                    editPresetRule($btn, $editData, $indexes);
                });

                $('#deletePresetBtn').click(function(){
                    $btn = $(this)[0];
                    $deleteData = {
                        id: $('#deletePresetId').val()
                    };


                    deletePresetRule($btn, $deleteData);
                });


                $('#addPresetBtn').click(function(){
                    $btn = $(this)[0];
                    $data = {
                        presetName: $('#presetName').val(),
                        conditions: []
                    };
                    $indexes = [];
                    $.each($dataConditions.items, function(i, val) {
                        if (typeof val != 'undefined') {
                            $data.conditions.push({
                                metric: $('#' + val['metric']).val(),
                                option: $('#' + val['option']).val(),
                                value1: $('#' + val['value1']).val(),
                                value2: $('#' + val['value2']).val()
                            });
                            $indexes.push(i);
                        }
                    });
                    addPresetRule($btn, $data, $indexes);
                });
            });
        }


        /**
         * Functions
         */

        // insert vertical

        function insertVertical(elem){
            var val = document.getElementById('vertical-value').value;
            addVertical(elem, val);

        }

        //remove vertical

        function removeVertical(elem){
            var val = document.getElementById('selectRemoveVertical').value;
            deleteVertical(elem, val);

        }

        // enable/disable input value
        function enableInputValue(elem){
            var index = elem.getAttribute('data-index');
            var option = elem.value;

            if(option == 'between'){
                $('#value2-'+index).attr('disabled', false);
            }else{
                $('#value2-'+index).attr('disabled', true);
            }


        }

        // enable/disable input value
        function enableEditInputValue(elem){
            var index = elem.getAttribute('data-index');
            var option = elem.value;

            if(option == 'between'){
                $('#e-value2-'+index).attr('disabled', false);
            }else{
                $('#e-value2-'+index).attr('disabled', true);
            }


        }

        // remove append

        function removeAppend(elem){
            var index = elem.getAttribute('data-index');
            $('#row-'+index).remove();
            delete $dataConditions.items[index];
        }

        function removeEditAppend(elem){
            var index = elem.getAttribute('data-index');
            $('#e-row-'+index).remove();
            delete $editDataConditions.items[index];
        }

        function removeActiveAppend(elem){
            var index = elem.getAttribute('data-index');
            var indexRow = elem.getAttribute('data-index-row');
            var key = elem.getAttribute('data-key');
            $('#row-'+indexRow).remove();

            delete $dataConditionsActive[index].items[key];
        }

        // enable edit rule

        function editRule(elem){
            var index = elem.getAttribute('data-index');
            var action = elem.getAttribute('data-action');
            if(action == 'edit'){
                $('.disableTrigger-'+index).attr('disabled', false);
                $('#buttonsContainer-'+index).css('display', 'none');
                $('#addConditionActiveContainer-'+index).css('display', 'inline');
            }else{
                var selCamp = encodeURIComponent($('#selectCampaign').val());
                getCampaignMatch(selCamp);
            }

        }

        function disableAllInputs(index){

            $('.disableTrigger-'+index).attr('disabled', true);
            $('#buttonsContainer-'+index).css('display', 'inline');
            $('#addConditionActiveContainer-'+index).css('display', 'none');

        }

        function appendConditionActive(elem){

            var index = elem.getAttribute('data-index');
            var lastCount =  $dataConditionsActive[index].items.length;
            $('#appendRuleSetActive-'+index).append(
                    '<div class="row" id="row-'+index+'-'+lastCount+'">' +
                    '<br>' +
                    '<div class="col-md-3">' +
                    '<select id="metric-'+index+'-'+lastCount+'" class="select2_single form-control metric" tabindex="-1">' +
                    '<option></option>' +
                    '<option value="visits">Visits</option>' +
                    '<option value="conversions">Conversion</option>' +
                    '<option value="cost">Cost</option>' +
                    '<option value="cpv">CPV</option>' +
                    '<option value="ctr">CTR</option>' +
                    '<option value="epv">EPV</option>' +
                    '<option value="roi">ROI</option>' +
                    '</select>' +
                    '</div>' +
                    '<div class="col-md-3">' +
                    '<select id="option-'+index+'-'+lastCount+'" data-index="'+index+'-'+lastCount+'" onChange="enableInputValue(this)" class="select2_single form-control option" tabindex="-1">' +
                    '<option></option>' +
                    '<option value="greaterThan">Greater Than</option>' +
                    '<option value="lessThan">Less Than</option>' +
                    '<option value="between">Between</option>' +
                    '<option value="equalTo">Equal To</option>' +
                    '</select>' +
                    '</div>' +
                    '<div class="col-md-2">' +
                    '<input type="text" class="form-control" id="value1-'+index+'-'+lastCount+'" placeholder="Enter Value" onkeypress="isNumberKey(event)">'+
                    '</div>' +
                    '<div class="col-md-2">' +
                    '<input type="text" class="form-control" id="value2-'+index+'-'+lastCount+'" placeholder="Enter Value" onkeypress="isNumberKey(event)" disabled>'+
                    '</div>' +
                    '<div class="col-md-2">' +
                    '<button class="btn red btn-md" data-index-row="'+index+'-'+lastCount+'" data-index="'+index+'" data-key="'+lastCount+'"  onclick="removeActiveAppend(this)"><i class="fa fa-times"></i> Remove</button">' +
                    '</div>' +
                    '</div>'

            );

            $dataConditionsActive[index].items.push({
                metric: 'metric-'+index+'-'+lastCount,
                option: 'option-'+index+'-'+lastCount,
                value1: 'value1-'+index+'-'+lastCount,
                value2: 'value2-'+index+'-'+lastCount
            });

            $(".metric").select2({
                allowClear: true,
                placeholder: 'Select Metric',
                width: null
            });

            $(".option").select2({
                allowClear: true,
                placeholder: 'Select Option',
                width: null
            });



        }

        function saveRule(elem){
            $btn = $(elem)[0];
            var index = elem.getAttribute('data-index');
            if($('#activeFrequencyFormat-'+index).val() == 'hours'){
                $frequency = parseInt($('#activeFrequency-'+index).val()) * 3600;
            }else{
                $frequency = parseInt($('#activeFrequency-'+index).val()) * 60;
            }
            $dataActive = {
                campaignRulesId: $('#campaignRulesId-'+index).val(),
                ruleType: $('#activeRuleType-'+index).val(),
                startFrom: $('#activeStartFrom-'+index).val(),
                startTime: $('#activeStartTime-'+index).val(),
                frequency: $frequency,
                logicalOperator: $('#activeLogicalOperator-'+index).val(),
                cid: $('#id').val(),
                conditions: []
            }

            $.each($dataConditionsActive[index].items, function(i, val) {
                if (typeof i != 'undefined') {
                    if (typeof val != 'undefined') {
                        $dataActive.conditions.push({
                            metric: $('#' + val['metric']).val(),
                            option: $('#' + val['option']).val(),
                            value1: $('#' + val['value1']).val(),
                            value2: $('#' + val['value2']).val()
                        });
                    }
                }
            });


            var selCamp = encodeURIComponent($('#selectCampaign').val());
            updateRule($btn, $dataActive, selCamp);
        }


        function changeRuleStatus(elem){
            $btn = $(elem)[0];
            var id = elem.getAttribute('data-id');
            var index = elem.getAttribute('data-index');
            var action = elem.getAttribute('data-action');
            if (action == 'pause'){
                $active = 0;
            }else{
                $active = 1;
            }
            $data = {
                campaignRulesId: id,
                active: $active
            }
            var selCamp = encodeURIComponent($('#selectCampaign').val());
            updateChangeRuleStatus($btn, $data, selCamp);

        }

        function pushDataDelete(elem){
            var id = elem.getAttribute('data-id');
            $('#campaignRuleIdDelete').val(id);
        }


        function pushData(elem){

            $editDataConditions = {items:[]};
            var id = elem.getAttribute('data-id');
            var action = elem.getAttribute('data-action');
            var name = elem.getAttribute('data-name');
            var conditions = $.parseJSON(elem.getAttribute('data-conditions'));

            if(action == 'delete'){
                $('#deletePresetId').val(id);
                $('#deletePresetName').html(name);
            }
            else{
                $('#editAppendRuleSet').empty();
                $('#editPresetName').val(name);
                $('#editPresetId').val(id);
                $('#lastCount').val(conditions.length);
                for($e = 0; $e < conditions.length; $e++){

                    $selectedVisits = '';
                    $selectedConversions = '';
                    $selectedCost = '';
                    $selectedCPV = '';
                    $selectedCTR = '';
                    $selectedEPV = '';
                    $selectedROI = '';

                    $selectedGreater = '';
                    $selectedLess = '';
                    $selectedBetween = '';
                    $selectedEqual = '';

                    if(conditions[$e]['ruleVariable'] == 'visits'){
                        $selectedVisits = 'selected';
                    }
                    else if(conditions[$e]['ruleVariable'] == 'conversions'){
                        $selectedConversions = 'selected';
                    }
                    else if(conditions[$e]['ruleVariable'] == 'cost'){
                        $selectedCost = 'selected';
                    }
                    else if(conditions[$e]['ruleVariable'] == 'cpv'){
                        $selectedCPV = 'selected';
                    }
                    else if(conditions[$e]['ruleVariable'] == 'ctr'){
                        $selectedCTR = 'selected';
                    }
                    else if(conditions[$e]['ruleVariable'] == 'epv'){
                        $selectedEPV = 'selected';
                    }else{
                        $selectedROI = 'selected';
                    }

                    if(conditions[$e]['ruleCondition'] == 'greaterthan'){
                        $selectedGreater = 'selected';
                    }
                    else if(conditions[$e]['ruleCondition'] == 'lessthan'){
                        $selectedLess = 'selected';
                    }
                    else if(conditions[$e]['ruleCondition'] == 'between'){
                        $selectedBetween = 'selected';
                    }else if(conditions[$e]['ruleCondition'] == 'equalto'){
                        $selectedEqual = 'selected';
                    }


                    $('#editAppendRuleSet').append(
                            '<div class="row" id="e-row-'+$e+'">' +
                            '<br>' +
                            '<div class="col-md-3">' +
                            '<select id="e-metric-'+$e+'" class="select2_single form-control metric" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="visits" '+ $selectedVisits +'>Visits</option>' +
                            '<option value="conversions" '+ $selectedConversions +'>Conversion</option>' +
                            '<option value="cost" '+ $selectedCost +'>Cost</option>' +
                            '<option value="cpv" '+ $selectedCPV +'>CPV</option>' +
                            '<option value="ctr" '+ $selectedCTR +'>CTR</option>' +
                            '<option value="epv" '+ $selectedEPV +'>EPV</option>' +
                            '<option value="roi" '+ $selectedROI +'>ROI</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-3">' +
                            '<select data-index="' +$e+ '" onChange="enableEditInputValue(this)" id="e-option-'+$e+'" class="select2_single form-control option" tabindex="-1">' +
                            '<option></option>' +
                            '<option value="greaterThan" '+ $selectedGreater +'>Greater Than</option>' +
                            '<option value="lessThan" '+ $selectedLess +'>Less Than</option>' +
                            '<option value="between" '+ $selectedBetween +'>Between</option>' +
                            '<option value="equalTo" '+ $selectedEqual +'>Equal To</option>' +
                            '</select>' +
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="e-value1-'+$e+'" placeholder="Enter Value" value="' + conditions[$e]['value1'] + '" onkeypress="isNumberKey(event)">'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<input type="text" class="form-control" id="e-value2-'+$e+'" placeholder="Enter Value" value="' + conditions[$e]['value2'] + '" onkeypress="isNumberKey(event)" disabled>'+
                            '</div>' +
                            '<div class="col-md-2">' +
                            '<button class="btn red btn-md" data-index="'+$e+'" onclick="removeEditAppend(this)"><i class="fa fa-times"></i> Remove</button">' +
                            '</div>' +
                            '</div>'

                    );

                    $editDataConditions.items.push({
                        metric: 'e-metric-'+$e,
                        option: 'e-option-'+$e,
                        value1: 'e-value1-'+$e,
                        value2: 'e-value2-'+$e
                    });

                    $i++;


                    $(".metric").select2({
                        allowClear: true,
                        placeholder: 'Select Metric',
                        width: null
                    });

                    $(".option").select2({
                        allowClear: true,
                        placeholder: 'Select Option',
                        width: null
                    });

                    console.log($editDataConditions);

                }

            }
        }


    </script>


    <!-- AJAX CALLS -->
    <script src="{{ asset('assets/ajax/campaign/campaign.js') }}" type="text/javascript"></script>
    <!-- END AJAX CALLS -->
{% endblock %}
